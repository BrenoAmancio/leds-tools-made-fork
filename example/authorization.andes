overview AutorizacaoAutenticacaoAuditoria {
            name:"Módulo Autorização, Autenticação e Auditoria"
            Architecture: csharp-clean-architecture
            description:"Este documento apresenta a análise do módulo Autorização, Autenticação e Auditoria da plataforma Conecta Fapes, com a contextualização do problema, e a aplicação de técnicas de documentação de requisitos, modelagem de casos de uso e modelagem de classes."
            purpose : "O módulo Autorização, Autenticação e Auditoria visa permitir o controle de autorização, autenticação e auditorias do Conecta Fapes"
            miniworld : 
            "
            O Gestor de c tem como objetivo definir as politicas para um agente (e.g., usuário ou papel) para ter autorização de executar algum evento no recurso (e.g., rota, arquivo o dado) no Conecta Fapes. 
            Por outro lado, o Gestor de Identifição tem como objetivo identificar um agente para ter acesso ao Conecta Fapes. Por fim, o Auditor tem como objetivo registrar os eventos que ocorrem no Conecta Fapes para uma auditoria. 
            
            É importante comentar que Identificação do usuário será feito utilizando Acesso Cidadão.
            "
        
        }



usecase Autorizacao {
    name: "Gestão da autorização"
    description: "Gerir a autorização de acesso ou manipulação de um recurso por um agente"
    depend: Identificacao
    event A01 {
        name: "Criar Repositorio de Politicas"
        description: "O objetivo deste evento é definir um ou mais repositórios para politicas."
        action: "
            O Gestor de Politicas criar um repositório de politicas
        "
    }
    event A02 {
        name: "Criar Politicas"
        description: "O objetivo deste evento é definir um ou mais politicas de autorização."
        action: "
            O Gestor de Politicas criar um  politica de autorização ao recurso para um agente ou papel.
        "
        depend: Autorizacao.A01
    }

    event A03 {
        name: "Aplicar Politicas"
        description: "O objetivo deste evento é aplicar uma regra quando for requisitado."
        action: "
            O Aplicador de Regras aplica uma politica quando requisitado, retornando se o agente está habilitado ou não para executar um evento em um recurso.
        "
        depend: Autorizacao.A02
    }
    
    event A04 {
        name: "Recuperar recurso"
        description: "O objetivo deste evento é recuperar um recurso, baseado em um politica."
        action: "
            O Aplicador de Regras recupera um recurso, baseado em uma politica de autorização.
        "
        depend: Autorizacao.A02, Autorizacao.A03
    }
    event A05 {
        name: "Autorização por 2FA"
        description: "O objetivo deste evento é autorizar o usuário a executar um evento no sistema por 2FA, baseado em um politica."
        action: "
            O Aplicador de Regras permite que um usuário execute um evento no sistem usando 2FA e em uma politica de autorização.
        "
        depend: Autorizacao.A02
    }
}

usecase Auditoria {
    name: "Auditoria de Eventos"
    description: "Realiza auditoria dos eventos do sistema"

    event B01 {
        name: "Registrar Evento"
        description: "O objetivo deste evento é registrar um evento do sistema"
        action: "
            O auditor recebe um evento e registra. 
        "
    }
    event B02 {
        name: "Consultar Evento "
        description: "O objetivo deste evento é consultar um evento registrado"
        action: "
            O Auditor informa sobre o evento registrado, baseado em uma consulta
        "
        depend: Auditoria.B01
    }    
}

usecase Identificacao {
    name: "Identificação de Agente"
    description: "Realiza a identificação de um agente"

    event I01 {
        name: "Identificar o agente por meio do acesso cidadão"
        description: "O objetivo deste evento é identificar o usuário e o seu papel via acesso cidadão"
        action: "
            O Identificador por meio do acesso cidadão identifica um usuário.  
        "
    }        
}